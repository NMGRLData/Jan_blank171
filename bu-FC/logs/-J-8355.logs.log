do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000210046768188
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.00543212891e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.00814819336e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.9168548584e-05
executed snippet estimated_duration=0.0, duration=0.00253915786743
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000142097473145
executed snippet estimated_duration=4.0, duration=0.00142621994019
Script duration 540.0
Run total estimated duration= 541.000
run duration: 0:09:01
doing event level: 2
19:33:04 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4933374800
close session 4933374800
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-FC-J-8355
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-FC-J-8355
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
19:33:05 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.16594,0.08075,0.10853,-0.01748,0.01559,0.00000
19:33:05 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
19:33:05 -- ******* Pre Extraction Check Passed *******
=================================================================================
19:33:05 -- stopping status monitor
stop 4931579344
Status monitor stopped
Status monitor finished
19:33:06 -- starting status monitor
start 4931579344
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 19:33:08.240241
Extraction Started jan_co2.py
19:33:08 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x1293f4e30>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.81605529785e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000188827514648
executed snippet estimated_duration=120.0, duration=0.00312614440918
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.69548797607e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0178790092468
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000115156173706
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
19:33:08 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
19:33:09 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
19:33:09 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
19:33:10 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
19:33:11 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
19:33:11 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
19:33:12 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
19:33:12 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
19:33:13 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.30360388756
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '') {}
setting motor "beam" to 
is blank. not heating
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
19:33:13 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.1806130409
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.179322958
executed snippet estimated_duration=180.0, duration=66.2467889786
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 148-221
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-09-03T19:31:53',
                    'title': 'iServer Hum.',
                    'value': 34.6}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-09-03T19:32:18',
                     'title': None,
                     'value': 111.45},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-09-03T19:32:18',
                     'title': None,
                     'value': 114.39298}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-09-03T18:42:54',
                       'title': None,
                       'value': -194.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-09-03T17:02:33',
                       'title': 'iServer Temp.',
                       'value': 74.8},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-09-03T18:30:32',
                       'title': None,
                       'value': 18.0}]}
Extraction Finished
19:34:17 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
19:34:17 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.370811206739
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0551 5.8787 5.9925 6.1936 6.2299 6.6789
Ar39     6.0100 5.7696 6.0566 6.3367 6.1126 6.5654
Ar36     5.6875 5.4386 5.7199 5.9956 5.7676 6.2165
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.258926936459
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=bu-FC-J analysis type=blank_unknown
Measurement Started jan_unknown400_120.py
19:34:17 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09645
GetGain L1 ===>> 0.010309
GetGain L2 ===>> 0.091218
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.147042666178
GetParameter Source Current Readback ===>> 552.171580296649
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/c9/70705c-22da-4238-88ec-b74e60f8ddf4.h5
flush and close file /Users/jan/PychronDev/data/isotopes/c9/70705c-22da-4238-88ec-b74e60f8ddf4.h5
testing...
no interpolation path defined
executed snippet estimated_duration=552.28, duration=0.000216007232666
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
molweights={'Ar41': 41.0, 'Ar40': 39.9624, 'Ar42': 42.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'Ar38': 37.9627, 'Ar39': 38.964}
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02926323e+00]
H1 map mass to dac 39.9624 >> 5.87867
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87863538106) on H1
setting magnet DAC
current  : 5.240751
requested: 5.878635
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.87863538106 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
19:34:22 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1efb57fb0>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x1efb90e30>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x1efb90830>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
19:34:22 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
19:34:26 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 12.0sec
set_time_zero () {}
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/c9/70705c-22da-4238-88ec-b74e60f8ddf4.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
19:34:38 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
State checksums do not match. Local:-173909521 Remote:-423938523
State checksum failed
GetIndicatorState R ===>> False
change switch state (True, True)
19:34:39 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
19:34:39 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000199794769287
executed snippet estimated_duration=4.0, duration=0.00178599357605
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000143051147461
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.745
flush and close file /Users/jan/PychronDev/data/isotopes/c9/70705c-22da-4238-88ec-b74e60f8ddf4.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/c9/70705c-22da-4238-88ec-b74e60f8ddf4.h5
measuring signal. ncounts=400
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
19:34:39 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
"signal" increment series count="2" fit count="1" regressing="True"
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
starting measurement
change switch state (True, True)
19:34:40 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
19:34:41 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
19:34:42 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
19:34:43 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
19:34:43 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
19:34:44 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.19409799576
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=6.32923483849
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
19:34:45 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
set states for children of V. state=True
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
19:35:05 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
19:35:31 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
19:35:58 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.010556488882893506}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.009802644699629194}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.009486438507463849}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.008943614152110438}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.008777400487657846}"
19:36:24 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.008678367188011033}"
set states for children of D. state=False
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0081640729239349}"
set states for children of B. state=False
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007975241693661064}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00790292414076441}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007540400762079079}"
19:36:50 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007461989204383228}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0073642160092925}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007118275784004445}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0070316095757147696}"
set states for children of C. state=False
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006922211512097286}"
19:37:17 -- collecting point 150
set states for children of B. state=True
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006863013623014779}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006724529085020613}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0065576065724268365}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006552208578823336}"
set states for children of B. state=False
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006377101407306064}"
19:37:43 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006225330132886344}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006130913419356823}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0061355935373166946}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006050109698009154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005933964748503688}"
19:38:09 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005870687013120498}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005753868900076254}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005711754374093003}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0055992568609966355}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005542354946160152}"
19:38:36 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0054933340232819405}"
set states for children of V. state=False
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005430837660075569}"
set states for children of H. state=True
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0054314654715457746}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005455525257090235}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005340358460060288}"
19:39:02 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005224256567899395}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005225759605870324}"
set states for children of C. state=True
set states for children of H. state=False
refresh_canvas_needed fired
set states for children of B. state=True
set states for children of D. state=True
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005259313219637377}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00519569207252992}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0051650697306684385}"
19:39:28 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005180554886966189}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005199495962405802}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005202818461903936}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005213745649136857}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005197791763977958}"
19:39:55 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005186741594425697}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005109123432270149}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005090583322885417}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005067883450023749}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005077475379353126}"
19:40:21 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005091449011357017}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0050978315630820625}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005084921946671497}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005099848637285786}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005097048312893771}"
19:40:47 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005091853683808542}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005085412542030368}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005107542977392801}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005107418412690603}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005107661255817809}"
19:41:14 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005092643981182282}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0051180251060456185}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005096081661933904}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005107006768310757}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10173115236118341}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005104441804040951}"
19:41:40 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :421.131
flush and close file /Users/jan/PychronDev/data/isotopes/c9/70705c-22da-4238-88ec-b74e60f8ddf4.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/c9/70705c-22da-4238-88ec-b74e60f8ddf4.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02926323e+00]
H1 map mass to dac 34.2 >> 5.24078160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.24075074525) on H1
setting magnet DAC
current  : 5.878635
requested: 5.240751
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.24075074525 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11491926819737762}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10827672867566902}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09321895460809392}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09043421771759148}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08759836792425217}"
19:42:25 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08364835031834472}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08477632482662598}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08754561609644461}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08917252692694258}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08892052789234632}"
19:42:51 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08866113412875903}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08784124770298142}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08726823528312164}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08841748305936063}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08815025243207421}"
19:43:18 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0863367467959208}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005091728049173094}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08799895808007119}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005092957552005877}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08835788252385382}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005094048908452954}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08680079955822012}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005095024163150342}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08648250768626886}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005095900907272236}"
19:43:44 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08798513282349617}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005095266953835198}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08799128989958908}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005096052125529172}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08631553874368035}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005096768422513149}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08614734856240933}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005097424526473263}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.403
flush and close file /Users/jan/PychronDev/data/isotopes/c9/70705c-22da-4238-88ec-b74e60f8ddf4.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=8.34657538014 threshold=5.0
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1b25ff710>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12f74ee30>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1b25ff710>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12f74ee30>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1dd63e0b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12f74ee30>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02926323e+00]
H1 map mass to dac 39.9624 >> 5.87867
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x13aabed70>
doing pc
starting peak center. center dac= 5.87863538106 step_width=0.001
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87864 width=0.03000 (5.86364 - 5.89364)
Moving to starting dac 5.86363538106
setting magnet DAC
current  : 5.240751
requested: 5.863635
Delta Dac: 0.622885
Checking detector protection. dv=0.62288
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.86363538106 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.0536191199401. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.86363538106, em= 5.89363538106, stm= 0.001
calculated step values: start=5.86363538106, end=5.89363538106, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.863635
requested: 5.863635
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86363538106 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863635
requested: 5.864670
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86466986382 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.864670
requested: 5.865704
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86570434658 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865704
requested: 5.866739
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86673882934 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866739
requested: 5.867773
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8677733121 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867773
requested: 5.868808
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86880779486 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868808
requested: 5.869842
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86984227762 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869842
requested: 5.870877
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87087676037 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870877
requested: 5.871911
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87191124313 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871911
requested: 5.872946
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87294572589 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872946
requested: 5.873980
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87398020865 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873980
requested: 5.875015
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87501469141 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875015
requested: 5.876049
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87604917417 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876049
requested: 5.877084
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87708365693 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877084
requested: 5.878118
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87811813968 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878118
requested: 5.879153
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87915262244 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879153
requested: 5.880187
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8801871052 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880187
requested: 5.881222
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88122158796 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881222
requested: 5.882256
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88225607072 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882256
requested: 5.883291
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88329055348 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883291
requested: 5.884325
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88432503624 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884325
requested: 5.885360
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88535951899 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885360
requested: 5.886394
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88639400175 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886394
requested: 5.887428
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88742848451 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887428
requested: 5.888463
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88846296727 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888463
requested: 5.889497
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88949745003 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889497
requested: 5.890532
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89053193279 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890532
requested: 5.891566
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89156641555 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.891566
requested: 5.892601
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89260089831 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892601
requested: 5.893635
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89363538106 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8706393890796544, 5.8783949001016982, 5.8861504111237419], [8.1146482285260628, 11.036778265217151, 8.160752321214062], 5.8812506115245435, 11.036778265217151)
Failed to find a valid peak. No peak greater than 1.0. max = 0.609212256484
Failed to find a valid peak. No peak greater than 1.0. max = 0.172818935772
Failed to find a valid peak. No peak greater than 1.0. max = 0.0147442896027
new center pos Detector(H1) (Ar40) @ 5.8783949001
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87842951762
update mftable H1 Ar40 5.87842951762 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.893635
requested: 5.878395
Delta Dac: 0.015240
Checking detector protection. dv=0.01524
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8783949001 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
Failed to find a valid peak. No peak greater than 1.0. max = 0.609212256484
Failed to find a valid peak. No peak greater than 1.0. max = 0.172818935772
Failed to find a valid peak. No peak greater than 1.0. max = 0.0147442896027
flush and close file /Users/jan/PychronDev/data/isotopes/c9/70705c-22da-4238-88ec-b74e60f8ddf4.h5
finished measure script
executed snippet estimated_duration=552.28, duration=666.933131933
jan_unknown400_120.py completed successfully
Measurement Finished
19:45:24 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
19:45:24 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.40938568115e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
19:45:24 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.406378030777
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
19:45:24 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-09-03T19:43:04',
                    'title': 'iServer Hum.',
                    'value': 35.3}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-09-03T19:44:20',
                     'title': None,
                     'value': 97.35},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-09-03T19:44:20',
                     'title': None,
                     'value': 99.21574}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-09-03T18:42:54',
                       'title': None,
                       'value': -194.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-09-03T17:02:33',
                       'title': 'iServer Temp.',
                       'value': 74.8},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-09-03T18:30:32',
                       'title': None,
                       'value': 18.0}]}
persistence save...
persistence save - db
post measurement save
5756139760 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 5756139760
close session 5756139760
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4926425712
MassSpec Database Version: 16.0
close session 4926425712
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to bu-FC-J
setting aliquot to 8355
setting step to 
setting uuid to c970705c-22da-4238-88ec-b74e60f8ddf4
setting irradpos to bu-FC-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 148-221
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_unknown
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x1ee6ead90> len t=120
baseline Ar41. v=-0.0953382547796, e=0.00295672186904
get signal data Ar41 H2
Get data signal Ar41 0.027+/-0.004 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1ee5df850> len t=120
baseline Ar40. v=0.086040722747, e=0.0038148002326
get signal data Ar40 H1
Get data signal Ar40 0.453+/-0.008 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x1eddbde90> len t=120
baseline Ar39. v=0.10327748618, e=0.0052287799324
get signal data Ar39 AX
Get data signal Ar39 0.024+/-0.010 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1ee096d10> len t=120
baseline Ar38. v=-0.0320947033566, e=0.00197946060352
get signal data Ar38 L1
Get data signal Ar38 0.0039+/-0.0026 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x1ee096750> len t=120
baseline Ar37. v=-0.00103767899128, e=0.00479980041207
get signal data Ar37 L2
Get data signal Ar37 0.057+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x1eddd5b90> len t=120
baseline Ar36. v=1.48345105382e-05, e=4.77573231528e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00450+/-0.00018 len t=400
bu-FC-J-8355 added analysis time 0.507639884949s
analysis added to mass spec database
mass spec save time= 0.542
persistence save - dvc
================= post measurement started
create new session 4931178032
close session 4931178032
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.609212256484
Failed to find a valid peak. No peak greater than 1.0. max = 0.172818935772
Failed to find a valid peak. No peak greater than 1.0. max = 0.0147442896027
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-8355.json
add to repo msg=modified - -J-8355.dat.json
add to repo msg=modified - -J-8355.blan.json
add to repo msg=modified - -J-8355.inte.json
add to repo msg=modified - -J-8355.icfa.json
add to repo msg=modified - -J-8355.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_blank171/bu-FC/tags/-J-8355.tags.json
add to repo msg=modified - -J-8355.peak.json
add to repo msg=modified - -J-8355.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_blank171/bu-FC/monitor/-J-8355.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-8355.inte.json
add to repo msg=modified - -J-8355.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-8355.blan.json
commit message=<BLANKS> preceding bc-02-J-920
add to repo msg=modified - -J-8355.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x1eac0e830>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4931178032
add association Jan_blank171
get identifier "bu-FC-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1e2672710>
close session 4931178032
================= post measurement finished
19:45:39 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
19:45:40 -- ******* Post Run Check Passed *******
19:45:40 -- Automated run bu-FC-J-8355 success duration: 755.093 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=95
update duration runid=bu-FC-J-8355, duration=755.092851877, md5=4c9e8ecc
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
add run
