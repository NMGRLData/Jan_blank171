do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000166893005371
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.50203704834e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.00679016113e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.10487365723e-05
executed snippet estimated_duration=0.0, duration=0.00185704231262
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.0001380443573
executed snippet estimated_duration=4.0, duration=0.00124287605286
Script duration 540.0
Run total estimated duration= 541.000
run duration: 0:09:01
doing event level: 2
09:15:27 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4958364688
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-FC-J-8442
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-FC-J-8442
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
09:15:27 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=0.00750,782.84496,4.82180,0.11672,0.70328,0.02418
09:15:27 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
09:15:27 -- ******* Pre Extraction Check Passed *******
=================================================================================
09:15:27 -- stopping status monitor
stop 4946177584
Status monitor stopped
Status monitor finished
len selected runs 1
cloning run 25612-00. set_labnumber=True, set_position=True
labnumber changed old:, new:25612
using cached meta values for 25612
clear labnumber
labnumber changed old:25612, new:
clear labnumber
clear labnumber
close session 4958364688
matched Position to 58
calculating time of run 25612-00
09:15:28 -- starting status monitor
start 4946177584
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
len selected runs 1
cloning run a-01-J-00. set_labnumber=True, set_position=True
labnumber changed old:, new:a-01-J
using cached meta values for a-01-J
clear labnumber
labnumber changed old:a-01-J, new:
clear labnumber
close session 4958364688
clear labnumber
clear labnumber
close session 4958364688
name=Extraction, new=sniffair_x2, suppress=True
calculating time of run a-01-J-00
start extraction
do extraction
Analysis started at 09:15:30.398019
Extraction Started jan_co2.py
09:15:30 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12991c050>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.91006469727e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.38961791992e-05
executed snippet estimated_duration=120.0, duration=0.00148892402649
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.91006469727e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0158030986786
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.39097595215e-05
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
09:15:30 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
09:15:31 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
09:15:32 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
09:15:32 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
len selected runs 1
cloning run c-02-J-00. set_labnumber=True, set_position=True
labnumber changed old:, new:c-02-J
using cached meta values for c-02-J
clear labnumber
labnumber changed old:c-02-J, new:
clear labnumber
clear labnumber
close session 4958364688
name=Extraction, new=cocktail_x1, suppress=True
GetIndicatorState S ===>> OK
change switch state (True, True)
calculating time of run c-02-J-00
09:15:33 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
09:15:33 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
09:15:34 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
09:15:34 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
09:15:35 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.31386780739
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '') {}
setting motor "beam" to 
is blank. not heating
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
09:15:36 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
len selected runs 1
cloning run a-01-J-00. set_labnumber=True, set_position=True
labnumber changed old:, new:a-01-J
using cached meta values for a-01-J
clear labnumber
labnumber changed old:a-01-J, new:
clear labnumber
clear labnumber
close session 4958364688
name=Extraction, new=sniffair_x2, suppress=True
calculating time of run a-01-J-00
len selected runs 1
cloning run c-02-J-00. set_labnumber=True, set_position=True
labnumber changed old:, new:c-02-J
using cached meta values for c-02-J
clear labnumber
labnumber changed old:c-02-J, new:
clear labnumber
clear labnumber
close session 4958364688
name=Extraction, new=cocktail_x1, suppress=True
calculating time of run c-02-J-00
SSSSSSSSSSSSSS set AR scroll to 1
update runs
No repository identifier for i=2, a-01-J-00
populating repository identifiers, ms=Jan, curtag=171
setting a-01-J-00 to repo=Jan_air171 type=air
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000154972076416
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.19345092773e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.40938568115e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.98566436768e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=6.50882720947e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.70092010498e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=4.60147857666e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=7.00950622559e-05
executed snippet estimated_duration=108.0, duration=0.00431489944458
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000102043151855
executed snippet estimated_duration=4.0, duration=0.000813007354736
unknown400_120 in script context. using previous estimated duration
pump_ms in script context. using previous estimated duration
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.09944152832e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.91413879395e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=6.31809234619e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.10487365723e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=4.50611114502e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=6.31809234619e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.20024108887e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=4.72068786621e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=6.19888305664e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=7.29560852051e-05
executed snippet estimated_duration=250.0, duration=0.00709414482117
pump_extraction_line in script context. using previous estimated duration
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.00407409668e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.48498535156e-05
executed snippet estimated_duration=0.0, duration=0.00159001350403
co2 in script context. using previous estimated duration
sniffair_x2 in script context. using previous estimated duration
cocktail_x1 in script context. using previous estimated duration
check queue Load1831
saving experiment to /Users/jan/PychronDev/experiments/Load1831.txt
setting executable True
queues saved
Queue modified. Reset run generator
Join finished
block finished. duration 30.1326420307
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0765149593
executed snippet estimated_duration=180.0, duration=66.1345920563
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 217
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-09-29T08:19:42',
                    'title': 'iServer Hum.',
                    'value': 56.9}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-09-29T09:14:37',
                     'title': None,
                     'value': 92.775},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-09-29T09:14:41',
                     'title': None,
                     'value': 93.51082}],
 'lab_temperatures': [{'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-09-29T08:06:32',
                       'title': 'iServer Temp.',
                       'value': 70.7},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-09-29T07:50:16',
                       'title': None,
                       'value': 18.0}]}
Extraction Finished
09:16:39 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
09:16:39 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 197.923274125618
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0544 5.8780 5.9918 6.1929 6.2292 6.6782
Ar39     6.0093 5.7690 6.0559 6.3361 6.1120 6.5647
Ar36     5.6868 5.4380 5.7192 5.9949 5.7669 6.2158
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.147042666178
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=bu-FC-J analysis type=blank_unknown
Measurement Started jan_unknown400_120.py
09:16:39 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09645
GetGain L1 ===>> 0.010309
GetGain L2 ===>> 0.091218
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.035158395898
GetParameter Source Current Readback ===>> 551.198376365745
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/37/a1ada1-7d6c-4fef-8c22-beb8f809d7f2.h5
flush and close file /Users/jan/PychronDev/data/isotopes/37/a1ada1-7d6c-4fef-8c22-beb8f809d7f2.h5
testing...
no interpolation path defined
executed snippet estimated_duration=552.28, duration=0.00015115737915
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
molweights={'Ar41': 41.0, 'Ar40': 39.9624, 'Ar42': 42.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'Ar38': 37.9627, 'Ar39': 38.964}
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02858323e+00]
H1 map mass to dac 39.9624 >> 5.87799
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87795538507) on H1
setting magnet DAC
current  : 5.877955
requested: 5.877955
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87795538507 ===>> OK
set_dac. change=False
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
09:16:40 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
09:16:40 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x165d91290>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x157225f50>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x173977dd0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
09:16:43 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 12.0sec
set_time_zero () {}
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/37/a1ada1-7d6c-4fef-8c22-beb8f809d7f2.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
09:16:55 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
09:16:56 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
09:16:56 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000246047973633
executed snippet estimated_duration=4.0, duration=0.00512981414795
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000164985656738
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
09:16:56 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.684
flush and close file /Users/jan/PychronDev/data/isotopes/37/a1ada1-7d6c-4fef-8c22-beb8f809d7f2.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/37/a1ada1-7d6c-4fef-8c22-beb8f809d7f2.h5
measuring signal. ncounts=400
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState A ===>> OK
change switch state (True, True)
09:16:57 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
starting measurement
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
09:16:58 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
09:16:59 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
09:17:00 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
09:17:00 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
09:17:01 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.38492083549
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=6.42178082466
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
09:17:02 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
09:17:22 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
09:17:49 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
09:18:15 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00846364389021818}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.008149208180073112}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007501569806255835}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007190613771916152}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0070377917735163515}"
09:18:41 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006793585880612353}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006646379558144322}"
len selected runs 1
cloning run bu-FC-J-00. set_labnumber=True, set_position=True
labnumber changed old:, new:bu-FC-J
using cached meta values for bu-FC-J
clear labnumber
labnumber changed old:bu-FC-J, new:
clear labnumber
clear labnumber
close session 4958364688
name=Extraction, new=co2, suppress=True
calculating time of run bu-FC-J-00
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0063887481769265555}"
len selected runs 1
cloning run a-01-J-00. set_labnumber=True, set_position=True
labnumber changed old:, new:a-01-J
using cached meta values for a-01-J
name=Extraction, new=sniffair_x2, suppress=True
calculating time of run a-01-J-00
SSSSSSSSSSSSSS set AR scroll to 2
update runs
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006451764871181655}"
No repository identifier for i=3, bu-FC-J-00
populating repository identifiers, ms=Jan, curtag=171
setting bu-FC-J-00 to repo=Jan_blank171 type=blank_unknown
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000115156173706
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.59740447998e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.79085540771e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000115871429443
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000229120254517
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=6.79492950439e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=4.41074371338e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=5.98430633545e-05
executed snippet estimated_duration=108.0, duration=0.00455594062805
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00010085105896
executed snippet estimated_duration=4.0, duration=0.000948905944824
unknown400_120 in script context. using previous estimated duration
pump_ms in script context. using previous estimated duration
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.09944152832e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000101089477539
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=9.41753387451e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.01086425781e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=4.6968460083e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=6.19888305664e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.20024108887e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.00679016113e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=6.29425048828e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=6.69956207275e-05
executed snippet estimated_duration=250.0, duration=0.00795102119446
pump_extraction_line in script context. using previous estimated duration
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.50475311279e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.19888305664e-05
executed snippet estimated_duration=0.0, duration=0.00137805938721
co2 in script context. using previous estimated duration
sniffair_x2 in script context. using previous estimated duration
cocktail_x1 in script context. using previous estimated duration
check queue Load1831
saving experiment to /Users/jan/PychronDev/experiments/Load1831.txt
setting executable True
queues saved
Queue modified. Reset run generator
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006277398579348411}"
09:19:07 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006013645462603059}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005967552336943334}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005858891063331364}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005720548770062837}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005637864952991859}"
09:19:34 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005555268602220016}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005550684311307904}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005424555591505448}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005280616325976279}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005259269533146623}"
09:20:00 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0050403661899454215}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004978005181326594}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0048875105917637815}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0048164886543881095}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00475799666167837}"
09:20:26 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004705015097560073}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00471764279482417}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004697564210763302}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004632271137788198}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004644622017692798}"
09:20:52 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004590595584060321}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004626818254328367}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0045871542984163355}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004492512088287276}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004508417917143177}"
09:21:19 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004435664096398184}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004374353051803523}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0043682431054294785}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004336526555126816}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004287873504811996}"
09:21:45 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004317077722904372}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00425448543907654}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004226472157038083}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004195831256447444}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004136116475743769}"
09:22:11 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004081105304378505}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004077427933888088}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004095363301451679}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004041473045240154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004030442649210944}"
09:22:37 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004028393996212768}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003969920072879171}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003969595437539567}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004012450410417874}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003960147008425074}"
09:23:04 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003976991651414073}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003928898092613656}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038924194638469928}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038920550856494968}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038990676455757096}"
09:23:30 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003916087071176295}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038989750502237655}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038777808497792595}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038384065067342764}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13687763619741267}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038859086276345355}"
09:23:56 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.180
flush and close file /Users/jan/PychronDev/data/isotopes/37/a1ada1-7d6c-4fef-8c22-beb8f809d7f2.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/37/a1ada1-7d6c-4fef-8c22-beb8f809d7f2.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02858323e+00]
H1 map mass to dac 34.2 >> 5.24010160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.24007074926) on H1
setting magnet DAC
current  : 5.877955
requested: 5.240071
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.24007074926 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08772143395588977}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0709932297836028}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07888239968606445}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08096992975955575}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08505011733987629}"
09:24:41 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09022189744192118}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0903488180761921}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08810801333623493}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08794455808671676}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08975834924929278}"
09:25:07 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08657664788196795}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0856629750760975}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08626643069915088}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0851587925372263}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08550566327411338}"
09:25:34 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08440354458228165}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0041169617845117}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08203919671407839}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004117632422418165}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08076091832424594}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004116560908819297}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07943310817838828}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0041171815254427545}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0774560976991408}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004116241018115257}"
09:26:00 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07722223532981716}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004115390944184634}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07918049448257204}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004115979822953243}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0780917976387168}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004116517045689518}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0787245661901753}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004115762526137786}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.121
flush and close file /Users/jan/PychronDev/data/isotopes/37/a1ada1-7d6c-4fef-8c22-beb8f809d7f2.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=5.1024794812 threshold=5.0
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x164d33e90>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x133eb0a70>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x164d33e90>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x133eb0a70>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x173b261d0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x133eb0a70>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02858323e+00]
H1 map mass to dac 39.9624 >> 5.87799
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x133eb0ad0>
doing pc
starting peak center. center dac= 5.87795538507 step_width=0.001
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87796 width=0.03000 (5.86296 - 5.89296)
Moving to starting dac 5.86295538507
setting magnet DAC
current  : 5.240071
requested: 5.862955
Delta Dac: 0.622885
Checking detector protection. dv=0.62288
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.86295538507 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.0498806671026. timeout= 10
Peak center baseline intensity achieved
_do_sweep sm= 5.86295538507, em= 5.89295538507, stm= 0.001
calculated step values: start=5.86295538507, end=5.89295538507, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.862955
requested: 5.862955
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86295538507 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.862955
requested: 5.863990
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86398986783 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.863990
requested: 5.865024
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86502435059 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865024
requested: 5.866059
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86605883334 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866059
requested: 5.867093
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8670933161 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867093
requested: 5.868128
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86812779886 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868128
requested: 5.869162
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86916228162 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869162
requested: 5.870197
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87019676438 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870197
requested: 5.871231
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87123124714 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871231
requested: 5.872266
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8722657299 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872266
requested: 5.873300
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87330021265 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873300
requested: 5.874335
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87433469541 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874335
requested: 5.875369
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87536917817 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875369
requested: 5.876404
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87640366093 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876404
requested: 5.877438
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87743814369 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877438
requested: 5.878473
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87847262645 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878473
requested: 5.879507
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87950710921 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879507
requested: 5.880542
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88054159196 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880542
requested: 5.881576
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88157607472 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881576
requested: 5.882611
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88261055748 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882611
requested: 5.883645
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88364504024 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883645
requested: 5.884680
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.884679523 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884680
requested: 5.885714
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88571400576 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885714
requested: 5.886748
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88674848852 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886748
requested: 5.887783
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88778297127 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887783
requested: 5.888817
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88881745403 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888817
requested: 5.889852
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88985193679 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889852
requested: 5.890886
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89088641955 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890886
requested: 5.891921
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89192090231 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.891921
requested: 5.892955
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89295538507 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8706207157293999, 5.8783161065109626, 5.8860114972925253], [5.0138821401457223, 6.7775171557904335, 5.0260858305211702], 5.8806908560099611, 6.7775171557904335)
Failed to find a valid peak. No peak greater than 1.0. max = 0.40700396641
Failed to find a valid peak. No peak greater than 1.0. max = 0.145646101424
Failed to find a valid peak. No peak greater than 1.0. max = 0.0124191077331
new center pos Detector(H1) (Ar40) @ 5.87831610651
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87835072357
update mftable H1 Ar40 5.87835072357 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/jan/PychronDev/setupfiles/spectrometer/jan_mftable_archive, universal_newlines=False, shell=None)
sweep finished
Popen(['git', 'cat-file', '--batch'], cwd=/Users/jan/PychronDev/setupfiles/spectrometer/jan_mftable_archive, universal_newlines=False, shell=None)
locally archiving mftable
setting magnet DAC
current  : 5.892955
requested: 5.878316
Delta Dac: 0.014639
Checking detector protection. dv=0.01464
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87831610651 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
Failed to find a valid peak. No peak greater than 1.0. max = 0.40700396641
Failed to find a valid peak. No peak greater than 1.0. max = 0.145646101424
Failed to find a valid peak. No peak greater than 1.0. max = 0.0124191077331
flush and close file /Users/jan/PychronDev/data/isotopes/37/a1ada1-7d6c-4fef-8c22-beb8f809d7f2.h5
finished measure script
executed snippet estimated_duration=552.28, duration=651.707812071
jan_unknown400_120.py completed successfully
Measurement Finished
09:27:31 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
09:27:31 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.41074371338e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
09:27:31 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.355628013611
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
09:27:31 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-09-29T09:26:44',
                    'title': 'iServer Hum.',
                    'value': 56.6}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-09-29T09:26:40',
                     'title': None,
                     'value': 82.425},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-09-29T09:26:44',
                     'title': None,
                     'value': 82.85446}],
 'lab_temperatures': [{'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-09-29T08:06:32',
                       'title': 'iServer Temp.',
                       'value': 70.7},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-09-29T07:50:16',
                       'title': None,
                       'value': 18.0}]}
persistence save...
persistence save - db
post measurement save
5250731952 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 5250731952
close session 5250731952
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4983100912
MassSpec Database Version: 16.0
close session 4983100912
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to bu-FC-J
setting aliquot to 8442
setting step to 
setting uuid to 37a1ada1-7d6c-4fef-8c22-beb8f809d7f2
setting irradpos to bu-FC-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 217
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_unknown
setting material to 
setting project to 
setting mass_spectrometer to jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x12dd82810> len t=120
baseline Ar41. v=-0.087948596512, e=0.00265744531753
get signal data Ar41 H2
Get data signal Ar41 0.013+/-0.004 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x173252e90> len t=120
baseline Ar40. v=0.0757322531669, e=0.00362795757407
get signal data Ar40 H1
Get data signal Ar40 0.501+/-0.008 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x173252550> len t=120
baseline Ar39. v=0.126186112319, e=0.00422438158049
get signal data Ar39 AX
Get data signal Ar39 0.003+/-0.010 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x173252b50> len t=120
baseline Ar38. v=-0.0257411130944, e=0.00167929433784
get signal data Ar38 L1
Get data signal Ar38 0.0066+/-0.0025 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x173252d50> len t=120
baseline Ar37. v=-0.00714121571075, e=0.00383482203113
get signal data Ar37 L2
Get data signal Ar37 0.045+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x173252a50> len t=120
baseline Ar36. v=1.23620920758e-05, e=3.75850243443e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00356+/-0.00016 len t=400
bu-FC-J-8442 added analysis time 0.507506132126s
analysis added to mass spec database
mass spec save time= 0.525
persistence save - dvc
================= post measurement started
create new session 4932124304
close session 4932124304
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.40700396641
Failed to find a valid peak. No peak greater than 1.0. max = 0.145646101424
Failed to find a valid peak. No peak greater than 1.0. max = 0.0124191077331
Popen(['git', 'fetch', 'origin'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_blank171, universal_newlines=False, shell=None)
Popen(['git', 'status', '-sb'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_blank171, universal_newlines=False, shell=None)
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-8442.json
add to repo msg=modified - -J-8442.dat.json
add to repo msg=modified - -J-8442.blan.json
add to repo msg=modified - -J-8442.inte.json
add to repo msg=modified - -J-8442.icfa.json
add to repo msg=modified - -J-8442.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_blank171/bu-FC/tags/-J-8442.tags.json
add to repo msg=modified - -J-8442.peak.json
add to repo msg=modified - -J-8442.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_blank171/bu-FC/monitor/-J-8442.moni.json
commit message=<COLLECTION>
Popen(['git', 'cat-file', '--batch-check'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_blank171, universal_newlines=False, shell=None)
Popen(['git', 'cat-file', '--batch'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_blank171, universal_newlines=False, shell=None)
add to repo msg=modified - -J-8442.inte.json
add to repo msg=modified - -J-8442.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-8442.blan.json
commit message=<BLANKS> preceding bu-FC-J-8441
add to repo msg=modified - -J-8442.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x1653849b0>
pushing to remote=origin, url=https://github.com
Popen(['git', 'push', 'origin', 'master'], cwd=/Users/jan/PychronDev/data/.dvc/repositories/Jan_blank171, universal_newlines=False, shell=None)
Popen(['git', 'fetch', 'origin'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
Popen(['git', 'status', '-sb'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
Popen(['git', 'diff', 'HEAD', '--name-only'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
no changes to meta repo
Popen(['git', 'push', 'origin', 'master'], cwd=/Users/jan/PychronDev/data/.dvc/MetaData, universal_newlines=False, shell=None)
create new session 4932124304
add association Jan_blank171
get identifier "bu-FC-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x143c15dd0>
close session 4932124304
================= post measurement finished
09:27:45 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
09:27:45 -- ******* Post Run Check Passed *******
09:27:45 -- Automated run bu-FC-J-8442 success duration: 737.906 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
update duration runid=bu-FC-J-8442, duration=737.906149864, md5=4c9e8ecc
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/Load1831.rem.txt
/Users/jan/PychronDev/experiments/rem/Load1831.ex.txt
doing event level: 3
add run
